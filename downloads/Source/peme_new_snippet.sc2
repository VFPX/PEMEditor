*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="peme_new_snippet.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*<PropValue>
		DataSource = .NULL.
		Height = 0
		Left = 0
		Name = "Dataenvironment"
		Top = 0
		Width = 0
	*</PropValue>

ENDDEFINE

DEFINE CLASS formsnippetgenerator AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Label12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Baselabel1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSnippetKeyword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Baselabel2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDelimiterCharacter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Baselabel3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMinParameters" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Baselabel4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMaxParameters" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSave" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Baselabel7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Baseline1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="optionGroupDelimeter" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: generatesnippet
		*m: savesnippet
		*m: validate
		*p: cdelimiter_char
		*p: cmax_parameters
		*p: cmin_parameters
		*p: cprocessfunction
		*p: csnippet_keyword
		*p: ncursorposition
	*</DefinedPropArrayMethod>

	*<PropValue>
		AutoCenter = .T.
		Caption = "Dynamic Snippet Generator"
		cdelimiter_char = ,
		cmax_parameters = ('1')
		cmin_parameters = ('0')
		cprocessfunction = 
		csnippet_keyword = 
		DoCreate = .T.
		Height = 461
		Name = "formSnippetGenerator"
		ncursorposition = 0
		ShowTips = .T.
		Visible = .T.
		Width = 553
	*</PropValue>

	ADD OBJECT 'Baselabel1' AS label WITH ;
		Caption = "Snippet Keyword", ;
		FontSize = 12, ;
		Height = 21, ;
		Left = 12, ;
		Name = "Baselabel1", ;
		TabIndex = 8, ;
		Top = 48, ;
		Width = 144
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Baselabel2' AS label WITH ;
		Caption = "Delimiter Character", ;
		FontSize = 12, ;
		Height = 21, ;
		Left = 12, ;
		Name = "Baselabel2", ;
		TabIndex = 9, ;
		Top = 84, ;
		Width = 144
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Baselabel3' AS label WITH ;
		Caption = "Min # Parameters", ;
		FontSize = 12, ;
		Height = 21, ;
		Left = 12, ;
		Name = "Baselabel3", ;
		TabIndex = 10, ;
		Top = 120, ;
		Width = 144
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Baselabel4' AS label WITH ;
		Caption = "Max # Parameters", ;
		FontSize = 12, ;
		Height = 21, ;
		Left = 12, ;
		Name = "Baselabel4", ;
		TabIndex = 11, ;
		Top = 156, ;
		Width = 144
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Baselabel7' AS label WITH ;
		Caption = "Snippet Generator", ;
		FontSize = 14, ;
		Height = 22, ;
		Left = 8, ;
		Name = "Baselabel7", ;
		TabIndex = 8, ;
		Top = 10, ;
		Width = 213
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Baseline1' AS line WITH ;
		Height = 0, ;
		Left = 7, ;
		Name = "Baseline1", ;
		Top = 34, ;
		Width = 539
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'cmdCancel' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "Cancel", ;
		FontSize = 10, ;
		Height = 36, ;
		Left = 468, ;
		Name = "cmdCancel", ;
		TabIndex = 7, ;
		Top = 420, ;
		Width = 75
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdSave' AS commandbutton WITH ;
		Caption = "Save & Edit", ;
		Enabled = .F., ;
		FontSize = 10, ;
		Height = 36, ;
		Left = 360, ;
		Name = "cmdSave", ;
		TabIndex = 6, ;
		Top = 420, ;
		Width = 85
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Label10' AS label WITH ;
		Caption = "There will also be a PublishHelp function in the Snippet PRG, where you identify the Syntax, Summary, and Detailed Information about the use of your snippet.", ;
		FontSize = 10, ;
		Height = 36, ;
		Left = 24, ;
		Name = "Label10", ;
		Top = 336, ;
		Width = 504, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label11' AS label WITH ;
		AutoSize = .T., ;
		Caption = "(2)  Modify function <PublishHelp>", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Height = 22, ;
		Left = 12, ;
		Name = "Label11", ;
		Top = 315, ;
		Width = 262
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label12' AS label WITH ;
		Caption = "*** You should create these variables so that the Help for Dynamic Snippets (@Help) is kept current.", ;
		FontSize = 10, ;
		Height = 48, ;
		Left = 24, ;
		Name = "Label12", ;
		Top = 372, ;
		Width = 456, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label5' AS label WITH ;
		Caption = "What's next...", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Height = 19, ;
		Left = 12, ;
		Name = "Label5", ;
		Top = 195, ;
		Width = 132
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label6' AS label WITH ;
		Caption = "When this template is saved, it will be opened in a code edit window. You will need to add code for the Process function() which will already be present in the template.", ;
		FontSize = 10, ;
		Height = 48, ;
		Left = 24, ;
		Name = "Label6", ;
		Top = 252, ;
		Width = 456, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label8' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "See http://Creating Your Own Dynamic Snippets", ;
		FontSize = 10, ;
		FontUnderline = .T., ;
		ForeColor = 0,0,255, ;
		Height = 18, ;
		Left = 228, ;
		MousePointer = 15, ;
		Name = "Label8", ;
		ToolTipText = "Click to follow link", ;
		Top = 10, ;
		Width = 282
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label9' AS label WITH ;
		AutoSize = .T., ;
		Caption = "(1)  Modify function <Process>", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Height = 22, ;
		Left = 12, ;
		Name = "Label9", ;
		Top = 231, ;
		Width = 232
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'optionGroupDelimeter' AS optiongroup WITH ;
		ButtonCount = 4, ;
		Height = 29, ;
		Left = 227, ;
		Name = "optionGroupDelimeter", ;
		Top = 83, ;
		Value = 1, ;
		Width = 320, ;
		Option1.Caption = "Comman", ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "optionComma", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 61, ;
		Option2.Caption = "Space", ;
		Option2.Height = 17, ;
		Option2.Left = 84, ;
		Option2.Name = "optionSpace", ;
		Option2.Top = 5, ;
		Option2.Width = 61, ;
		Option3.Caption = "None", ;
		Option3.Height = 17, ;
		Option3.Left = 151, ;
		Option3.Name = "optionNone", ;
		Option3.ToolTipText = "Hint: With 'None', the entire contents of the line following the snippet name will be passed into the Process function as a single parameter.", ;
		Option3.Top = 5, ;
		Option3.Width = 61, ;
		Option4.Caption = "Other", ;
		Option4.Height = 17, ;
		Option4.Left = 215, ;
		Option4.Name = "optionOther", ;
		Option4.Top = 5, ;
		Option4.Width = 61
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'txtDelimiterCharacter' AS textbox WITH ;
		ControlSource = "thisform.cDelimiter_Char", ;
		FontSize = 12, ;
		Height = 27, ;
		InputMask = "X", ;
		Left = 168, ;
		Name = "txtDelimiterCharacter", ;
		TabIndex = 2, ;
		Top = 82, ;
		Width = 48
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtMaxParameters' AS textbox WITH ;
		ControlSource = "thisform.cMax_Parameters", ;
		FontSize = 12, ;
		Height = 27, ;
		Left = 168, ;
		Name = "txtMaxParameters", ;
		TabIndex = 4, ;
		Top = 154, ;
		Width = 48
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtMinParameters' AS textbox WITH ;
		ControlSource = "thisform.cMin_Parameters", ;
		FontSize = 12, ;
		Height = 27, ;
		Left = 168, ;
		Name = "txtMinParameters", ;
		TabIndex = 3, ;
		Top = 118, ;
		Width = 48
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtSnippetKeyword' AS textbox WITH ;
		ControlSource = "thisform.cSnippet_Keyword", ;
		FontSize = 12, ;
		Height = 27, ;
		Left = 168, ;
		Name = "txtSnippetKeyword", ;
		TabIndex = 1, ;
		Top = 46, ;
		Width = 144
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE generatesnippet
		Local lcHelpDetail, lcHelpSummary, lcCodeSnippet, lcParametersList, lcSnippet_Keyword, lcDelimiter_Char
		
		#Define CRLF Chr(13) + Chr(10)
		lcHelpSummary = 'Text To lcSummaryHTML Noshow' + CRLF ;
				+ '        Enter <b>one-line summary</b> for Snippet_Keyword here' + CRLF ;
				+ '    EndText'
		lcHelpDetail = 'Text To lcDetailHTML Noshow' + CRLF ;
				+ '        Enter <b>full description</b> for Snippet_Keyword here' + CRLF ;
				+ '    EndText'
		
		lcParametersList = 'Lparameters lcParam1'
		For lnI = 2 to Val(Thisform.cMax_Parameters)
			lcParametersList = lcParametersList + ', lcParam' + Transform(lnI)
		EndFor 
		
		lcSnippet_Keyword = Alltrim(thisform.cSnippet_Keyword)
		lcDelimiter_Char = thisform.cDelimiter_Char
		
		TEXT to lcCodeSnippet noshow TextMerge
		
		
		****************************************************************
		*	First Section: Compile-time constants -- modify as needed  *
		****************************************************************
		
		* snippet-keyword: case insensitive, NOT in quotes
		#Define Snippet_Keyword 	<<lcSnippet_Keyword>>
		
		* delimiter between parameters, IN QUOTES; if empty, only one parameter
		#Define Delimiter_Char	 	'<<lcDelimiter_Char>>'
		
		* minimum number of parameters to be accepted
		#Define Min_Parameters      <<thisform.cMin_Parameters>>
		
		* maximum number of parameters to be accepted
		#Define Max_Parameters      <<thisform.cMax_Parameters>>
		
		
		
		
		*****************************************************************
		*	 Middle Section: Setup and cleanup code:  DO NOT CHANGE!!!  *
		*****************************************************************
		
		Lparameters lcParameters, lcKeyWord
		
		Local loParams As Collection
		Local lcParams, lnI, lxResult
		
		lxResult = .F.
		Do Case
				* if no parameters passed, this is a request for Help
			Case Pcount() = 0
				lxResult = PublishHelp()
		
				* Only process our keyword 
			Case Pcount() = 2 And Not Upper ([Snippet_Keyword]) == lcKeyWord
				lxResult = .F. && not mine!
		
			Otherwise
				lcParams = _oPEMEditor.ExtractSnippetParameters(lcParameters, Delimiter_Char, [Snippet_Keyword], Min_Parameters, Max_Parameters)
				If 'C' = VarType (lcParams)
					lxResult = Process (&lcParams)
				Endif
		Endcase
		
		Execscript (_Screen.cThorDispatcher, 'Result=', lxResult)
		Return lxResult
		
		
		Function CreateHelpResult (lcSyntax, lcSummaryHTML, lcDetailHTML)
			Local loResult As 'Empty'
			loResult = Createobject ('Empty')
			AddProperty (loResult, 'Name', [Snippet_Keyword])
			AddProperty (loResult, 'Syntax', Evl (lcSyntax, ''))
			AddProperty (loResult, 'Summary', Evl (lcSummaryHTML, ''))
			AddProperty (loResult, 'Detail', Evl (lcDetailHTML, ''))
			Return loResult
		Endproc
		
		
		
		
		*****************************************************************
		****** Last Section: Custom code for this snippet				*
		*****************************************************************
		
		#Define CR   Chr(13)
		#Define LF   Chr(10)
		#Define CRLF Chr(13) + Chr(10)
		#Define Tab  Chr(9)
		
		* Put your code here to process the parameters passed; make sure to set parameters appropriately
		* Result is one of following:
		*   character string -- string to insert into edit window, replacing the snippet there (usual case, by far)
		*                       if the characters '^^^' are found, they indicate where the cursor is to be placed
		*   .T.              -- handled, but edit window already updated (advanced use)
		*   .F.              -- not handled
		
		Function Process
		    <<lcParametersList>>
		    Local lcNewText
		    lcNewText = 'Set this variable to the text to be inserted; see comments above.'
		    ^^^^^
		    Return lcNewText
		EndFunc
		
		
		
		***************************************************************************************************
		* Publish the help for this snippet: calls function CreateHelpResult with three parameters:
		*    Syntax
		*    Summary
		*    Full description
		
		* Note that all have these may contain HTML tags
		***************************************************************************************************
		
		Function PublishHelp
			Local lcDetailHTML, lcSummaryHTML, lcSyntax
		
			lcSyntax = [List parameters for Snippet_Keyword here]
		
			<<lcHelpSUmmary>>
			
			<<lcHelpDetail>>
		
			Return CreateHelpResult (lcSyntax, lcSummaryHTML, lcDetailHTML)
		Endproc
		
		
		Endtext
		
		*-- Do this so we can place the cursor when we open the edit window.
		lcSearchPhrase = '^^^^^'
		lnPos = Atc(lcSearchPhrase, lcCodeSnippet, 1) 
		
		thisform.nCursorPosition = lnPos
		
		Return Strtran(lcCodeSnippet, lcSearchPhrase, '')
		
	ENDPROC

	PROCEDURE Init
		Lparameters tcParam1, tcParam2, tcParam3
		
		If !Empty(tcParam1)
		 thisform.cSnippet_Keyword = tcParam1
		EndIf
		
		If !Empty(tcParam2)
		 thisform.cMin_Parameters = tcParam2
		EndIf
		
		If !Empty(tcParam3)
		 thisform.cMax_Parameters = tcParam3
		EndIf
		
		This.Validate()
		
	ENDPROC

	PROCEDURE savesnippet
		Local lcFullname, lcPath, lnReplace
		lcPath = Getdir()
		
		If Not Empty (lcPath)
			lcFullname = Addbs (lcPath) + 'PEME_Snippet_' + Alltrim (Thisform.cSnippet_Keyword) + '.prg'
		
			If File (lcFullname)
				lnReplace = Messagebox ('File ' + lcFullname + ' already exists. Replace it?', 3)
				Do Case
					Case lnReplace = 2 && Cancel
						Return
					Case lnReplace = 7 && No
						Return
					Case lnReplace = 6 && Yes
						Erase (lcFullname)
				Endcase
			Endif
		
			Strtofile (Thisform.GenerateSnippet(), lcFullname)
			_oPEMEditor.AddMRUFile(lcFullName)
			Compile(lcFullName)
			Modify Command (lcFullname) Range Thisform.nCursorPosition, Thisform.nCursorPosition Nowait
			Thisform.Release()
		
		Endif
		
		
		
		
	ENDPROC

	PROCEDURE validate
		Local llFieldsReady, lnParamCount
		
		With Thisform
			lnParamCount = Val (.cMax_Parameters)
			If lnParamCount > 26
				Messagebox ('Too many parameters (max = 26)')
			Endif
		
			llFieldsReady			 = Between (lnParamCount, 1, 26) And Not Empty (.cSnippet_Keyword)
			Thisform.cmdSave.Enabled = llFieldsReady And (.cMin_Parameters <= .cMax_Parameters)
		
			If Len (.cDelimiter_Char) = 0
				.cMin_Parameters = '1'
				.cMax_Parameters = '1'
			Endif
		Endwith
		
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.Release()
	ENDPROC

	PROCEDURE cmdSave.Click
		ThisForm.SaveSnippet()
		
	ENDPROC

	PROCEDURE Label8.Click
		LOCAL loHyperlink, lcLink
		lcLink = "http://pemeditor.blogspot.com/2010/11/creating-your-own-pmds-in-pem-editor.html"
		loHyperlink = CREATEOBJECT("Hyperlink") 
		loHyperlink.navigateto(lcLink)
	ENDPROC

	PROCEDURE optionGroupDelimeter.Click
		Local loTextBox, lcValue
		
		loTextBox = thisform.txtDelimiterCharacter
		
		DoDefault()
		
		Do case
		
		 Case this.Value = 1
		  lcValue = ','
		 Case this.Value = 2
		  lcValue = ' '
		 Otherwise this.Value = 3
		  lcValue = ''
		
		EndCase
		
		thisform.cDelimiter_Char = lcValue
		
		thisform.Refresh()  
		
		If this.Value = 4 
		 loTextBox.SetFocus()
		EndIf
		
		loTextBox.Valid()
		
		
		
	ENDPROC

	PROCEDURE txtDelimiterCharacter.Refresh
		this.enabled = (thisform.optionGroupDelimeter.Value = 4)
		
	ENDPROC

	PROCEDURE txtDelimiterCharacter.Valid
		thisform.Validate()
	ENDPROC

	PROCEDURE txtMaxParameters.Valid
		thisform.Validate()
	ENDPROC

	PROCEDURE txtMinParameters.Valid
		thisform.Validate()
	ENDPROC

	PROCEDURE txtSnippetKeyword.Valid
		thisform.Validate()
	ENDPROC

ENDDEFINE
